{
  "tech_stack": [
    "React",
    "TypeScript",
    "Vite",
    "Express.js",
    "Node.js",
    "PostgreSQL",
    "Tailwind CSS",
    "Radix UI",
    "Redux Toolkit",
    "React Router",
    "React Hook Form",
    "Zod",
    "Framer Motion",
    "Lucide React",
    "Axios",
    "Socket.io Client",
    "Recharts",
    "Date-fns"
  ],
  "features": [
    {
      "name": "Basic React Application",
      "description": "Simple React application with Vite + React setup",
      "files": [
        "src/App.tsx",
        "src/AppWrapper.tsx",
        "src/main.tsx"
      ]
    },
    {
      "name": "UI Component Library",
      "description": "Comprehensive UI component library based on Radix UI primitives",
      "files": [
        "src/components/ui/accordion.tsx",
        "src/components/ui/alert.tsx",
        "src/components/ui/avatar.tsx",
        "src/components/ui/badge.tsx",
        "src/components/ui/button.tsx",
        "src/components/ui/card.tsx",
        "src/components/ui/dialog.tsx",
        "src/components/ui/dropdown-menu.tsx",
        "src/components/ui/form.tsx",
        "src/components/ui/input.tsx",
        "src/components/ui/select.tsx",
        "src/components/ui/table.tsx",
        "src/components/ui/tabs.tsx",
        "src/components/ui/toast.tsx"
      ]
    },
    {
      "name": "Network Handler",
      "description": "HTTP request handling with error management and retry logic",
      "files": [
        "src/utils/networkHandler.ts"
      ]
    },
    {
      "name": "Toast Notification System",
      "description": "Custom toast notification system with state management",
      "files": [
        "src/hooks/use-toast.ts",
        "src/components/ui/toast.tsx",
        "src/components/ui/toaster.tsx"
      ]
    },
    {
      "name": "Utility Functions",
      "description": "Common utility functions for styling and class management",
      "files": [
        "src/lib/utils.ts"
      ]
    },
    {
      "name": "Error Boundary",
      "description": "React error boundary for handling application errors",
      "files": [
        "src/ErrorBoundary.tsx"
      ]
    }
  ],
  "database_tables": [],
  "api_endpoints": [
    "/",
    "/*"
  ],
  "project_structure": {
    "frontend": {
      "framework": "React with Vite",
      "location": "vitereact/",
      "build_tool": "Vite",
      "styling": "Tailwind CSS",
      "ui_library": "Radix UI",
      "state_management": "Redux Toolkit",
      "routing": "React Router",
      "forms": "React Hook Form with Zod validation"
    },
    "backend": {
      "framework": "Express.js",
      "database": "PostgreSQL",
      "location": "server.js, backend/server.js"
    }
  },
  "development_setup": {
    "frontend_dev": "npm run dev (Vite dev server)",
    "build": "npm run build",
    "lint": "npm run lint",
    "preview": "npm run preview"
  },
  "key_dependencies": {
    "ui_components": "@radix-ui/* components",
    "state_management": "@reduxjs/toolkit, react-redux, redux-persist",
    "forms": "react-hook-form, @hookform/resolvers, zod",
    "styling": "tailwindcss, class-variance-authority, clsx, tailwind-merge",
    "routing": "react-router-dom",
    "http_client": "axios",
    "animations": "framer-motion",
    "icons": "lucide-react",
    "charts": "recharts",
    "date_handling": "date-fns",
    "real_time": "socket.io-client"
  }
}